From 04185d7b1d1a7909f47f23fbd85691401c7fabd7 Mon Sep 17 00:00:00 2001
From: wiire <wi7ire@gmail.com>
Date: Mon, 17 Apr 2017 16:32:35 +0200
Subject: [PATCH] Removed OpenSSL dependency

---
 Makefile                     |  2 +-
 src/Makefile                 |  3 ++-
 src/bully.c                  |  9 ++++++++-
 src/crypto/sha256-internal.c | 16 ++++++++--------
 4 files changed, 19 insertions(+), 11 deletions(-)

diff --git a/Makefile b/Makefile
index 88e5f13..7649409 100644
--- a/Makefile
+++ b/Makefile
@@ -9,7 +9,7 @@ define Package/bully
   CATEGORY:=Network
   SUBMENU:=wireless
   TITLE:=Brute force attack against WPS, that actually works
-  DEPENDS:=+libpcap +libopenssl
+  DEPENDS:=+libpcap
 endef
 
 define Package/bully/description
diff --git a/src/Makefile b/src/Makefile
index 8387dd2..4d73721 100644
--- a/src/Makefile
+++ b/src/Makefile
@@ -7,8 +7,9 @@ W_ROOT	= `pwd`
 
 CFLAGS	+= -I$(W_ROOT) -I$(W_ROOT)/utils/ -I$(W_ROOT)/tls/
 CFLAGS	+= -I$(W_ROOT)/wps/ -I$(W_ROOT)/crypto/ -I$(W_ROOT)/common/
+CFLAGS	+= -DUSE_INTERNAL_CRYPTO -DCONFIG_NO_RANDOM_POOL
 
-LDFLAGS += -lpcap -lssl -lcrypto
+LDFLAGS += -lpcap
 
 HDRS	= $(W_NAME).h 80211.h frame.h iface.h bswap.h version.h
 SRCS	= $(W_NAME).c 80211.c frame.c iface.c crc32.c timer.c utils.c
diff --git a/src/bully.c b/src/bully.c
index 2711981..1692780 100644
--- a/src/bully.c
+++ b/src/bully.c
@@ -60,9 +60,16 @@
 #include "utils/uuid.c"
 #include "utils/wpa_debug.c"
 #include "utils/wpabuf.c"
+#include "crypto/sha1-internal.c"
 #include "crypto/sha256.c"
+#include "crypto/sha256-internal.c"
 #include "crypto/aes-cbc.c"
-#include "crypto/crypto_openssl.c"
+#include "crypto/aes-internal.c"
+#include "crypto/aes-internal-enc.c"
+#include "crypto/aes-internal-dec.c"
+#include "crypto/crypto_internal-modexp.c"
+#include "crypto/dh_groups.c"
+#include "crypto/dh_group5.c"
 #include "wps/wps.c"
 #include "wps/wps_registrar.c"
 #include "wps/wps_common.c"
diff --git a/src/crypto/sha256-internal.c b/src/crypto/sha256-internal.c
index b061373..2ec7620 100644
--- a/src/crypto/sha256-internal.c
+++ b/src/crypto/sha256-internal.c
@@ -162,28 +162,28 @@ static int sha256_process(struct sha256_state *md, const unsigned char *in,
 			  unsigned long inlen)
 {
 	unsigned long n;
-#define block_size 64
+#define sha256_block_size 64
 
 	if (md->curlen > sizeof(md->buf))
 		return -1;
 
 	while (inlen > 0) {
-		if (md->curlen == 0 && inlen >= block_size) {
+		if (md->curlen == 0 && inlen >= sha256_block_size) {
 			if (sha256_compress(md, (unsigned char *) in) < 0)
 				return -1;
-			md->length += block_size * 8;
-			in += block_size;
-			inlen -= block_size;
+			md->length += sha256_block_size * 8;
+			in += sha256_block_size;
+			inlen -= sha256_block_size;
 		} else {
-			n = MIN(inlen, (block_size - md->curlen));
+			n = MIN(inlen, (sha256_block_size - md->curlen));
 			os_memcpy(md->buf + md->curlen, in, n);
 			md->curlen += n;
 			in += n;
 			inlen -= n;
-			if (md->curlen == block_size) {
+			if (md->curlen == sha256_block_size) {
 				if (sha256_compress(md, md->buf) < 0)
 					return -1;
-				md->length += 8 * block_size;
+				md->length += 8 * sha256_block_size;
 				md->curlen = 0;
 			}
 		}
